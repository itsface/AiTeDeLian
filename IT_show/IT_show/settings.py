"""
Django settings for IT_show project.

Generated by 'django-admin startproject' using Django 1.11.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import logging

logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s %(levelname)s %(message)s',
)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'u5so_w=#virmbwm55*)+fxmcv5rl&$_fvm3pv6e2-k&0j3c=*v'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']
localHost="http://ktchen.cn:8080/"

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_crontab',
    'MiddlewareTools',
    'tes',
    'base',
    'show',
    'user',
    # 'werkzeug_debugger_runserver',
    # 'django_extensions',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'MiddlewareTools.middleware.MobileDetectionMiddleware',
    'django.middleware.gzip.GZipMiddleware',
    # 'MiddlewareTools.middleware.allowVisit',

]

# MIDDLEWARE_CLASSES=[
#     'makeUserAgent.middleware.MobileDetectionMiddleware',
# ]
ROOT_URLCONF = 'IT_show.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'IT_show.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'it_show', # os.path.join(BASE_DIR, 'db.sqlite3'),
        'USER': 'root',
        'PASSWORD': "YXwKLhfIcmlY",#'YXwKLhfIcmlY',、、、、SU0stJdqu5Jc

        'HOST': '127.0.0.1',
        'PORT': '3306',
        # 'OPTIONS': {'charset': 'utf8mb4'},
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/



STATIC_URL = '/static/'
#STATIC_ROOT=os.path.join(BASE_DIR,'static/').replace('\\','/')

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static/"),
)

#STATICFILES_DIRS = (os.path.join(BASE_DIR, "static/admin"),)

MEDIA_URL = "/image/"
MEDIA_ROOT=os.path.join(BASE_DIR,"image/")


#定时任务
CRONJOBS = [
    ('00 06 * * *', 'django.core.management.call_command', ['refreshCache'],{},'>> /Logs/run.log'),
]
#缓存
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': [
            '127.0.0.1:11211',
        ]
    }
}

#邮件配置
EMAIL_HOST = 'smtp.163.com'  # 如果是 163 改成 smtp.163.com
EMAIL_PORT = 465  # 作用未知
EMAIL_USE_SSL = True
EMAIL_HOST_USER = 'easyblog123@163.com'  # 帐号
EMAIL_HOST_PASSWORD = '110abc'  # 密码
DEFAULT_FROM_EMAIL = 'IT <easyblog123@163.com>'


# logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '[%(asctime)s] [%(levelname)s] %(message)s'
        },
    },
    'handlers': {
        'console':{
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
        # 'file': {
        #     'level': 'INFO',
        #     'class': 'logging.FileHandler',
        #     'filename': r'D:\Web\ITShow2018\nginx-1.14.0\AiTeDeLian-master\IT_show\django_log\all.log',
        #     'formatter': 'verbose'
        # },
        'email': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'include_html': True,
        }
    },
    'loggers': {
        'django': {
            'handlers': ['console',  # 'file',
                         'email'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}

#全局变量
isNew=True
